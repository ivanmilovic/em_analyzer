name: Release Notes (NEW v5)

on:
  release:
    types: [published, edited]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag releasa (npr. v20251005-1118)'
        required: true
        type: string

jobs:
  notes:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo (for template)
        uses: actions/checkout@v4

      - name: Stamp
        run: echo "USING NEW WORKFLOW v5"

      # Uzmemo TAG iz eventa ili iz ručnog inputa
      - name: Set TAG
        shell: bash
        run: |
          if [[ -n "${{ github.event.release.tag_name }}" ]]; then
            echo "TAG=${{ github.event.release.tag_name }}" >> "$GITHUB_ENV"
          else
            echo "TAG=${{ github.event.inputs.tag }}" >> "$GITHUB_ENV"
          fi
          echo "Using TAG=$TAG"

      - name: Download manifest.json
        uses: robinraju/release-downloader@v1.8
        with:
          tag: ${{ env.TAG }}
          fileName: manifest.json
          out-file-path: release_assets

      # Python tolerantno (utf-8-sig) čita manifest i upisuje SHA256 u GITHUB_ENV
      - name: Parse manifest and export SHA256
        shell: python
        run: |
          import io, json, os, sys
          p = 'release_assets/manifest.json'
          with io.open(p, 'r', encoding='utf-8-sig') as f:
              m = json.load(f)
          sha = m.get('sha256')
          if not sha:
              sys.exit("manifest.json must contain 'sha256'")
          with open(os.environ['GITHUB_ENV'], 'a', encoding='utf-8') as env:
              env.write(f"SHA256={sha}\n")
          print("SHA256 parsed:", sha)

      - name: Render release notes
        shell: bash
        run: |
          test -f release_notes_template.md || { echo "Missing release_notes_template.md in repo root"; exit 1; }
          sed -e "s/{{TAG}}/${TAG}/g" \
              -e "s/{{SHA256}}/${SHA256}/g" \
              release_notes_template.md > RELEASE_BODY.md
          echo "----- RELEASE BODY (preview) -----"
          grep -n "ZIP SHA256" RELEASE_BODY.md || true

      - name: Update GitHub Release body
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('RELEASE_BODY.md','utf8');
            const { data: rel } = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: process.env.TAG
            });
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: rel.id,
              body
            });
